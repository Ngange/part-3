{"version":3,"sources":["services/contacts.js","components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","handleSearch","placeholder","onChange","Notification","message","cssName","className","PersonForm","onSubmit","name","handleName","number","handleNumber","value","type","Persons","filtered","remove","map","person","onClick","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","search","setSearch","setMessage","setCssName","useEffect","contactsServices","initialContact","console","log","setContact","obj","some","toLowerCase","newPerson","found","find","window","confirm","setTimeout","catch","error","exists","alert","length","returnedContact","concat","filter","includes","e","target","event","preventDefault","r","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61dbe825.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst removeContact = (id) => {\n   return axios.delete(`${baseUrl}/${id}`)\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {getAll, create, update, removeContact}","import React from \"react\";\n\nconst Filter = ({handleSearch}) => {\n    return(\n      <div>\n      <span>filter shown with</span><input \n                    placeholder= 'Search....'\n                    onChange={handleSearch}\n                  />\n      </div>\n    )\n  }\n\nexport default Filter","import React from \"react\";\n\nconst Notification = ({ message, cssName }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={cssName}>\n        {message}\n      </div>\n    )\n}\n\nexport default Notification\n","import React from \"react\"\n\nconst PersonForm = ({onSubmit, name, handleName, number, handleNumber}) => {\n    return(\n      <form onSubmit={onSubmit}>\n          <div>\n            name: <input \n                    value={name}\n                    onChange={handleName}\n                  />\n          </div>\n  \n          <div>\n            number: <input \n                    value={number}\n                    onChange={handleNumber}\n                  />\n          </div>\n  \n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n    )\n  }\n\nexport default PersonForm","import React from \"react\";\n\nconst Persons = ({filtered, remove}) => {\n    return(\n      filtered.map(person => \n        <p key={person.id}>\n          {person.name} {person.number}\n          <button className=\"delete\" onClick={() => remove(person.id, person.name)}>delete</button> \n        </p>\n        )\n    )\n  }\n\n  export default Persons","import React, { useState, useEffect } from 'react'\nimport contactsServices from './services/contacts'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [search, setSearch] = useState('')\n  const [message, setMessage] = useState(null)\n  const [cssName, setCssName] = useState(null)\n\n  useEffect(() => {\n    contactsServices\n      .getAll()\n      .then(initialContact => {\n        console.log(initialContact)\n        setPersons(initialContact)\n      })\n  }, [])\n  \n  // Check if person is already in the phoneboook.\n  const nameExists = (() =>\n    persons.some((person) =>\n      person.name.toLowerCase() === newName.toLowerCase())\n    )\n\n    //Checks if person exists\n  const exists = (newPerson) => {\n    const found = persons.find((person) =>\n    person.name.toLowerCase() === newName.toLowerCase())\n    const check = window.confirm(`${newPerson.name} is already added to the phonebook, replace the old number with a new one?`)\n\n    if (check) {\n      contactsServices\n      .update(found.id, newPerson)\n      .then(response => {\n        setPersons(person => person.id !== found.id ? person : response)\n        setMessage(`${newPerson.name}s' number is changed`)\n        setCssName(\"success\")\n        setTimeout(() => {\n          setMessage(null)\n          setCssName(null)\n        }, 5000);\n      })\n      .catch(error => {\n        setMessage(`Information of ${newPerson.name} has already been removed from the server!`)\n        setCssName(\"error\")\n        setTimeout(() => {\n          setMessage(null)\n          setCssName(null)\n        }, 5000);\n      })\n    }\n\n  }\n\n  /* set's the name of the new person.\n    c\n   */\n  const setContact = (obj) => {\n    if(nameExists()) {\n      exists(obj)\n    }  \n    else {\n      if(newName === '' ) {\n      alert(`Cannot add an empty string  as a contact`)\n      }\n      else if(newNumber === '') {\n        alert(`Contact cannot be less than seven(7) digits`)\n      }\n      else if(newNumber.length < 7) {\n        alert(`Contact cannot be less than seven(7) digits`)\n      }\n      else {\n        contactsServices\n        .create(obj)\n        .then(returnedContact => {\n          setPersons(persons.concat(returnedContact))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Added ${obj.name}`)\n          setCssName(\"success\")\n          setTimeout(() => {\n            setMessage(null)\n            setCssName(null)\n          }, 10000);\n        })\n      }\n    }\n  }  \n\n  const addContact = (event) => {\n    event.preventDefault()\n    const parsonObject = {\n      name: newName,\n      number: newNumber\n    }\n    return setContact(parsonObject)\n  } \n\n  const handleNewName = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (e) => {\n    console.log(e.target.value)\n    setSearch(e.target.value)\n  }\n\n\n  // Handles the deletion of contacts\n  const handleDelete = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`) ) {\n      setMessage(`Deleted ${name}`)\n      setCssName(\"success\")\n      setTimeout(() => {\n        setMessage(null)\n        setCssName(null)\n      }, 10000);\n      contactsServices\n      .removeContact(id)\n      .catch(error => {\n        setMessage(`Information of ${name} has already been removed from the server!`)\n        setCssName(\"error\")\n        setTimeout(() => {\n          setMessage(null)\n          setCssName(null)\n        }, 10000);\n      })\n\n      //to refresh the contact and exclude deleted contact\n      contactsServices.getAll().then(response => {\n        let data = []\n        // eslint-disable-next-line array-callback-return\n        response.map(r => {\n          if (r.id !== id) {\n            console.log(r)\n            data.push(r)\n            \n          }\n        })\n        setPersons(data)\n      })\n    }\n  }\n\n  const filtered = persons.filter(person => {\n    if (search === '') {\n    return person\n    }\n    else if(person.name.toLowerCase().includes(search.toLowerCase())) {\n      return person\n    }\n    return null\n  })\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={ message } cssName={cssName} />\n      <Filter handleSearch={handleSearch} />\n\n      <h3>Add New Contact</h3>\n\n      <PersonForm\n        onSubmit={addContact}\n        name={newName}\n        handleName={handleNewName}\n        number={newNumber}\n        handleNumber={handleNewNumber}\n      />\n      \n        \n      <h2>Numbers</h2>\n      \n      <Persons filtered={filtered} remove={handleDelete} />\n      \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}